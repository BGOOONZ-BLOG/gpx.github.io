{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["StaticQueryContext","React","createContext","StaticQuery","props","react_default","a","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","layout","_ref","gatsby_browser_entry_StaticQuery","site","siteMetadata","title","_3892401927","__webpack_require__","d","__webpack_exports__","pages_query","allMarkdownRemark","totalCount","allFile","edges","map","_ref2","node","relativePath","_ref3","gatsby_link_default","to","fields","slug","frontmatter","excerpt","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"sJAYMA,UAAqBC,IAAMC,cAAc,KAEzCC,EAAc,SAAAC,GAAK,OACvBC,EAAAC,EAAAC,cAACP,EAAmBQ,SAApB,KACG,SAAAC,GACC,OACEL,EAAMM,MACLD,EAAgBL,EAAMO,QAAUF,EAAgBL,EAAMO,OAAOD,MAEtDN,EAAMQ,QAAUR,EAAMS,UAC5BT,EAAMM,KAAON,EAAMM,KAAKA,KAAOD,EAAgBL,EAAMO,OAAOD,MAGvDL,EAAAC,EAAAC,cAAA,uCA4BfJ,EAAYW,UAAY,CACtBJ,KAAMK,IAAUC,OAChBL,MAAOI,IAAUE,OAAOC,WACxBN,OAAQG,IAAUI,KAClBN,SAAUE,IAAUI,mBCtDPC,EAAA,SAAAC,GAAA,IAAGR,EAAHQ,EAAGR,SAAH,OACbR,EAAAC,EAAAC,cAACe,EAAD,CACEX,MAAK,aASLC,OAAQ,SAAAF,GAAI,OACVL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKG,EAAKa,KAAKC,aAAaC,OAC3BZ,IAbPH,KAAAgB,KCJFC,EAAAC,EAAAC,EAAA,0BAAAC,IAIeD,EAAA,iBAAAR,GAAA,IAAGX,EAAHW,EAAGX,KAAH,OACbL,EAAAC,EAAAC,cAACa,EAAD,KACGV,EAAKqB,kBAAkBC,WACxB3B,EAAAC,EAAAC,cAAA,WACCG,EAAKuB,QAAQC,MAAMC,IAAI,SAAAC,GAAA,OAAAA,EAAGC,KAAgBC,eAC1C5B,EAAKqB,kBAAkBG,MAAMC,IAAI,SAAAI,GAAA,IAAGF,EAAHE,EAAGF,KAAH,OAChChC,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAMmC,GAAIJ,EAAKK,OAAOC,MACnBN,EAAKO,YAAYnB,MACjBY,EAAKQ,QACLR,EAAKK,OAAOC,UATN,IAeFhC,EAAK,+BCnBlB,IAAsBmC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAA9B,GAAkB,IAAf+B,EAAe/B,EAAf+B,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOvD,IAAMM,cAAckD,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBrC,UAAY,CAC3BsC,SAAUrC,IAAU8C,MAAM,CACxBL,SAAUzC,IAAUE,OAAOC,aAC1BA,YAGUiC","file":"component---src-pages-index-js-69fbd31224799328743a.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\";\nimport { Link, StaticQuery, graphql } from \"gatsby\";\n\nexport default ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div>\n        <h1>{data.site.siteMetadata.title}</h1>\n        {children}\n      </div>\n    )}\n  />\n);\n","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport Layout from \"../components/layout\";\n\nexport default ({ data }) => (\n  <Layout>\n    {data.allMarkdownRemark.totalCount}\n    <br />\n    {data.allFile.edges.map(({ node }) => node.relativePath)}\n    {data.allMarkdownRemark.edges.map(({ node }) => (\n      <Link to={node.fields.slug}>\n        {node.frontmatter.title}\n        {node.excerpt}\n        {node.fields.slug}\n      </Link>\n    ))}\n  </Layout>\n);\n\nexport const query = graphql`\n  query {\n    allFile {\n      edges {\n        node {\n          relativePath\n        }\n      }\n    }\n    allMarkdownRemark {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n          }\n          excerpt\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}