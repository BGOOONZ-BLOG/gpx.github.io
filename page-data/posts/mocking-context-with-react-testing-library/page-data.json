{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts/mocking-context-with-react-testing-library/","result":{"data":{"site":{"siteMetadata":{"siteUrl":"https://www.polvara.me"}},"markdownRemark":{"html":"<p>I noticed several people getting confused on how to test React components that\nrely on a context with <code class=\"language-text\">react-testing-library</code>. Before I even explain how to\ntest such components let me get something out of the way:</p>\n<p class=\"highlight\">\nThere is no need to mock your contexts in order to test them.\n</p>\n<p><a href=\"https://jestjs.io/docs/en/jest-object#jestmockmodulename-factory-options\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">jest.mock</code></a>\nand friends are extremely helpful for many test scenarios, but context is not\none of them. So how do we go about testing it?</p>\n<p>The answer is all in <code class=\"language-text\">react-testing-library</code>'s core principle:</p>\n<blockquote class=\"twitter-tweet\" data-dnt=\"true\"><p lang=\"en\" dir=\"ltr\">The more your tests resemble the way your software is used, the more confidence they can give you.</p>&mdash; Kent C. Dodds üßë‚ÄçüöÄ (@kentcdodds) <a href=\"https://twitter.com/kentcdodds/status/977018512689455106?ref_src=twsrc%5Etfw\">March 23, 2018</a></blockquote>\n\n<p>What does <q>resemble the way your software is used</q> mean in our case? Let's\nsee a practical example:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> UserContext <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token function\">getUserOrMaybeNot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserGreeter</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">UserContext.Provider</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">UserGreeter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>UserContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>user<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"Hello stranger!\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>user<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In this particular case, <code class=\"language-text\">user</code> could or could not be defined depending on what\n<code class=\"language-text\">getUserOrMaybeNot</code> returns.</p>\n<p>You probably want to test that <code class=\"language-text\">UserGreeter</code> renders the correct thing in both\ncases. You might be tempted to <code class=\"language-text\">render</code> <code class=\"language-text\">UserGreeter</code> and mock the context\nsomehow. That's not how your software is used though. Your component is rendered\nwithin a provider. Let's do that then.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UserGreeter salutes an anonymous user\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserGreeter</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">UserContext.Provider</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>screen<span class=\"token punctuation\">.</span><span class=\"token function\">getByText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello stranger!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeInTheDocument</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UserGreeter salutes a user\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Giorgio\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserGreeter</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">UserContext.Provider</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>screen<span class=\"token punctuation\">.</span><span class=\"token function\">getByText</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>user<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeInTheDocument</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>To avoid the repetition, you can move the render method in a helper function:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">renderUserGreeter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserGreeter</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">UserContext.Provider</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UserGreeter salutes an anonymous user\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">renderUserGreeter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>screen<span class=\"token punctuation\">.</span><span class=\"token function\">getByText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello stranger!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeInTheDocument</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UserGreeter salutes a user\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Giorgio\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">renderUserGreeter</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>screen<span class=\"token punctuation\">.</span><span class=\"token function\">getByText</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>user<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeInTheDocument</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<hr>\n<p>If you want more information about testing context with <code class=\"language-text\">react-testing-library</code>\ncheck out the\n<a href=\"https://testing-library.com/docs/example-react-context\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">official docs</a> and join\nthe <a href=\"https://spectrum.chat/react-testing-library\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">spectrum community</a> for help\ngetting you started.</p>","timeToRead":2,"frontmatter":{"title":"Mocking Context with React Testing Library","cover":{"file":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='320'%20viewBox='0%200%20400%20320'%20preserveAspectRatio='none'%3e%3cpath%20d='M39%2084l-3%2035c0%207%201%2010%203%2017%206%2015%205%2014%204%2042-3%2057-3%2063-2%2069%201%207%205%2012%209%2014%206%203%2014-3%2015-12%201-4%200-28-3-50l-3-33-1-15%203-9c5-15%205-28-2-53l-3-8-1%201%202%2014c0%2013-1%2014-3%202-1-10-2-12-3-12v10c0%2015-1%2015-3%202-1-8-2-11-3-11l-1%2010c0%2012-2%2013-2%201l-2-13-1-4v3m172%2028v2h-1c-2%200-2%200-2%202l-2%205c-3%204-3%204-1%206%206%208%2010%2010%2010%207%200-2%203-3%206-4l10-5-6-6-7-6c-1-2-6-3-7-1m16%2020l-1%203c2%200%202%201-2%204l-4%204%203%203c4%203%208%204%2012%202l4-1%206-2%204-2-5-6c-6-6-7-6-10-6h-3l-4%201m-17%2023l-6%207%208%206c2%201%207%200%207-2l3-1c1-1%203-2%204-1l1-1%203-1c3%200%202-2-1-4-2%200-4-3-5-4-5-8-6-8-14%201m37-2c-7%207-8%208-4%2011%203%203%2010%203%2012%200l4-2c4%200%206-2%204-4l-2-2-1-3h-3l-1-1c1-1%200-4-1-4l-8%205m-18%2019c-8%209-8%209-5%2010l4%203c3%202%203%202%205%200l2-1%204-1%203-2h3l3-2c2%200%201-2-4-7l-8-7-7%207m53%202c-3%202-8%203-9%200l-4%203c-4%204-5%203-6%200-1-2-4%201-4%203l-1%201c-2%200-4%204-5%208l-1%203%204-4%204-4c1%201-18%2020-19%2019v1l-1%201h-1v1c-1%200-2%201-1%202%200%201-9%2011-12%2011l-1%201%201%201c2-1%201%200-1%202%200%201-2%202-3%201v2c0%202%200%203-2%204l-2%204c0%202-2%205-5%208l-6%205-3-2c-4-1-4-1-4%202%201%201%206%204%209%204%201%200%2010-9%2010-11h1l1-1c-1-1%209-12%2023-25a284%20284%200%200024-27l4-4%205-1c5-1%207-3%208-7%201-3%200-4-3-1m-71%2018l-6%206%203%203c3%202%204%203%207%203l8-3%201-1h4c6-3%206-2-2-9l-8-6-7%207m-96%2052l24%2025%206%203c11%207%2022%2012%2028%2013l3%201c1%202%2017%204%2018%203%202-2%200-4-5-4-14-3-36-11-49-20l-15-13-10-8'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.25,"src":"/static/b05152179e70aae5dfbc7a9bef9db0bf/67bd0/cover.jpg","srcSet":"/static/b05152179e70aae5dfbc7a9bef9db0bf/d5c54/cover.jpg 1040w,\n/static/b05152179e70aae5dfbc7a9bef9db0bf/f734f/cover.jpg 2080w,\n/static/b05152179e70aae5dfbc7a9bef9db0bf/67bd0/cover.jpg 3872w","srcWebp":"/static/b05152179e70aae5dfbc7a9bef9db0bf/6299e/cover.webp","srcSetWebp":"/static/b05152179e70aae5dfbc7a9bef9db0bf/e4875/cover.webp 1040w,\n/static/b05152179e70aae5dfbc7a9bef9db0bf/ecdd3/cover.webp 2080w,\n/static/b05152179e70aae5dfbc7a9bef9db0bf/6299e/cover.webp 3872w","sizes":"(max-width: 3872px) 100vw, 3872px"}}},"author":"Mae Mu","link":"https://unsplash.com/photos/AX_VWc7ORwY","alt":null}},"fields":{"slug":"/posts/mocking-context-with-react-testing-library/"}}},"pageContext":{"slug":"/posts/mocking-context-with-react-testing-library/"}}}