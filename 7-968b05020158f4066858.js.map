{"version":3,"sources":["webpack:///./node_modules/gatsby/node_modules/core-js/modules/_string-ws.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_string-trim.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.object.define-property.js","webpack:///./node_modules/intersection-observer/intersection-observer.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.number.constructor.js"],"names":["module","exports","$export","defined","fails","spaces","space","ltrim","RegExp","rtrim","exporter","KEY","exec","ALIAS","exp","FORCE","fn","trim","P","F","string","TYPE","String","replace","S","defineProperty","f","window","IntersectionObserverEntry","prototype","Object","get","this","intersectionRatio","document","registry","IntersectionObserver","THROTTLE_TIMEOUT","POLL_INTERVAL","USE_MUTATION_OBSERVER","observe","target","_observationTargets","some","item","element","nodeType","Error","_registerInstance","push","entry","_monitorIntersections","ownerDocument","_checkForIntersections","unobserve","filter","_unmonitorIntersections","length","_unregisterInstance","disconnect","_unmonitorAllIntersections","takeRecords","records","_queuedEntries","slice","_initThresholds","opt_threshold","threshold","Array","isArray","sort","t","i","a","isNaN","_parseRootMargin","opt_rootMargin","margins","split","map","margin","parts","value","parseFloat","unit","doc","win","defaultView","_monitoringDocuments","indexOf","callback","monitoringInterval","domObserver","setInterval","addEvent","MutationObserver","attributes","childList","characterData","subtree","_monitoringUnsubscribes","clearInterval","removeEvent","root","frame","getFrameElement","index","rootDoc","itemDoc","unsubscribe","splice","unsubscribes","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","top","bottom","left","right","width","height","forEach","targetRect","getBoundingClientRect","rootContainsTarget","_rootContainsTarget","oldEntry","intersectionRect","_computeTargetAndRootIntersection","newEntry","time","performance","now","boundingClientRect","rootBounds","_hasCrossedThreshold","isIntersecting","_callback","getComputedStyle","display","parentBoundingRect","parentIntersectionRect","parent","getParentNode","atRoot","parentRect","parentComputedStyle","frameRect","frameIntersect","body","documentElement","overflow","computeRectIntersection","html","clientWidth","clientHeight","_expandRectByRootMargin","rect","_rootMarginValues","newRect","oldRatio","newRatio","thresholds","containsDeep","targetArea","intersectionArea","Number","toFixed","opt_options","timeout","timer","options","bind","setTimeout","rootMargin","join","node","event","opt_useCapture","addEventListener","attachEvent","removeEventListener","detatchEvent","rect1","rect2","Math","max","min","el","err","child","parentNode","host","assignedSlot","frameElement","e","global","has","cof","inheritIfRequired","toPrimitive","gOPN","gOPD","dP","$trim","$Number","Base","proto","BROKEN_COF","TRIM","toNumber","argument","it","third","radix","maxCode","first","charCodeAt","NaN","code","digits","l","parseInt","arguments","that","valueOf","call","key","keys","j","constructor"],"mappings":"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","file":"7-968b05020158f4066858.js","sourcesContent":["module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n","require(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.array.some\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.function.bind\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n(function () {\n  'use strict'; // Exit early if we're not running in a browser.\n\n  if (typeof window !== 'object') {\n    return;\n  } // Exit early if all IntersectionObserver and IntersectionObserverEntry\n  // features are natively supported.\n\n\n  if ('IntersectionObserver' in window && 'IntersectionObserverEntry' in window && 'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n    // Minimal polyfill for Edge 15's lack of `isIntersecting`\n    // See: https://github.com/w3c/IntersectionObserver/issues/211\n    if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n      Object.defineProperty(window.IntersectionObserverEntry.prototype, 'isIntersecting', {\n        get: function get() {\n          return this.intersectionRatio > 0;\n        }\n      });\n    }\n\n    return;\n  }\n  /**\n   * A local reference to the document.\n   */\n\n\n  var document = window.document;\n  /**\n   * An IntersectionObserver registry. This registry exists to hold a strong\n   * reference to IntersectionObserver instances currently observing a target\n   * element. Without this registry, instances without another reference may be\n   * garbage collected.\n   */\n\n  var registry = [];\n  /**\n   * Creates the global IntersectionObserverEntry constructor.\n   * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n   * @param {Object} entry A dictionary of instance properties.\n   * @constructor\n   */\n\n  function IntersectionObserverEntry(entry) {\n    this.time = entry.time;\n    this.target = entry.target;\n    this.rootBounds = entry.rootBounds;\n    this.boundingClientRect = entry.boundingClientRect;\n    this.intersectionRect = entry.intersectionRect || getEmptyRect();\n    this.isIntersecting = !!entry.intersectionRect; // Calculates the intersection ratio.\n\n    var targetRect = this.boundingClientRect;\n    var targetArea = targetRect.width * targetRect.height;\n    var intersectionRect = this.intersectionRect;\n    var intersectionArea = intersectionRect.width * intersectionRect.height; // Sets intersection ratio.\n\n    if (targetArea) {\n      // Round the intersection ratio to avoid floating point math issues:\n      // https://github.com/w3c/IntersectionObserver/issues/324\n      this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n    } else {\n      // If area is zero and is intersecting, sets to 1, otherwise to 0\n      this.intersectionRatio = this.isIntersecting ? 1 : 0;\n    }\n  }\n  /**\n   * Creates the global IntersectionObserver constructor.\n   * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n   * @param {Function} callback The function to be invoked after intersection\n   *     changes have queued. The function is not invoked if the queue has\n   *     been emptied by calling the `takeRecords` method.\n   * @param {Object=} opt_options Optional configuration options.\n   * @constructor\n   */\n\n\n  function IntersectionObserver(callback, opt_options) {\n    var options = opt_options || {};\n\n    if (typeof callback != 'function') {\n      throw new Error('callback must be a function');\n    }\n\n    if (options.root && options.root.nodeType != 1) {\n      throw new Error('root must be an Element');\n    } // Binds and throttles `this._checkForIntersections`.\n\n\n    this._checkForIntersections = throttle(this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT); // Private properties.\n\n    this._callback = callback;\n    this._observationTargets = [];\n    this._queuedEntries = [];\n    this._rootMarginValues = this._parseRootMargin(options.rootMargin); // Public properties.\n\n    this.thresholds = this._initThresholds(options.threshold);\n    this.root = options.root || null;\n    this.rootMargin = this._rootMarginValues.map(function (margin) {\n      return margin.value + margin.unit;\n    }).join(' ');\n    /** @private @const {!Array<!Document>} */\n\n    this._monitoringDocuments = [];\n    /** @private @const {!Array<function()>} */\n\n    this._monitoringUnsubscribes = [];\n  }\n  /**\n   * The minimum interval within which the document will be checked for\n   * intersection changes.\n   */\n\n\n  IntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n  /**\n   * The frequency in which the polyfill polls for intersection changes.\n   * this can be updated on a per instance basis and must be set prior to\n   * calling `observe` on the first target.\n   */\n\n  IntersectionObserver.prototype.POLL_INTERVAL = null;\n  /**\n   * Use a mutation observer on the root element\n   * to detect intersection changes.\n   */\n\n  IntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n  /**\n   * Starts observing a target element for intersection changes based on\n   * the thresholds values.\n   * @param {Element} target The DOM element to observe.\n   */\n\n  IntersectionObserver.prototype.observe = function (target) {\n    var isTargetAlreadyObserved = this._observationTargets.some(function (item) {\n      return item.element == target;\n    });\n\n    if (isTargetAlreadyObserved) {\n      return;\n    }\n\n    if (!(target && target.nodeType == 1)) {\n      throw new Error('target must be an Element');\n    }\n\n    this._registerInstance();\n\n    this._observationTargets.push({\n      element: target,\n      entry: null\n    });\n\n    this._monitorIntersections(target.ownerDocument);\n\n    this._checkForIntersections();\n  };\n  /**\n   * Stops observing a target element for intersection changes.\n   * @param {Element} target The DOM element to observe.\n   */\n\n\n  IntersectionObserver.prototype.unobserve = function (target) {\n    this._observationTargets = this._observationTargets.filter(function (item) {\n      return item.element != target;\n    });\n\n    this._unmonitorIntersections(target.ownerDocument);\n\n    if (this._observationTargets.length == 0) {\n      this._unregisterInstance();\n    }\n  };\n  /**\n   * Stops observing all target elements for intersection changes.\n   */\n\n\n  IntersectionObserver.prototype.disconnect = function () {\n    this._observationTargets = [];\n\n    this._unmonitorAllIntersections();\n\n    this._unregisterInstance();\n  };\n  /**\n   * Returns any queue entries that have not yet been reported to the\n   * callback and clears the queue. This can be used in conjunction with the\n   * callback to obtain the absolute most up-to-date intersection information.\n   * @return {Array} The currently queued entries.\n   */\n\n\n  IntersectionObserver.prototype.takeRecords = function () {\n    var records = this._queuedEntries.slice();\n\n    this._queuedEntries = [];\n    return records;\n  };\n  /**\n   * Accepts the threshold value from the user configuration object and\n   * returns a sorted array of unique threshold values. If a value is not\n   * between 0 and 1 and error is thrown.\n   * @private\n   * @param {Array|number=} opt_threshold An optional threshold value or\n   *     a list of threshold values, defaulting to [0].\n   * @return {Array} A sorted list of unique and valid threshold values.\n   */\n\n\n  IntersectionObserver.prototype._initThresholds = function (opt_threshold) {\n    var threshold = opt_threshold || [0];\n    if (!Array.isArray(threshold)) threshold = [threshold];\n    return threshold.sort().filter(function (t, i, a) {\n      if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n        throw new Error('threshold must be a number between 0 and 1 inclusively');\n      }\n\n      return t !== a[i - 1];\n    });\n  };\n  /**\n   * Accepts the rootMargin value from the user configuration object\n   * and returns an array of the four margin values as an object containing\n   * the value and unit properties. If any of the values are not properly\n   * formatted or use a unit other than px or %, and error is thrown.\n   * @private\n   * @param {string=} opt_rootMargin An optional rootMargin value,\n   *     defaulting to '0px'.\n   * @return {Array<Object>} An array of margin objects with the keys\n   *     value and unit.\n   */\n\n\n  IntersectionObserver.prototype._parseRootMargin = function (opt_rootMargin) {\n    var marginString = opt_rootMargin || '0px';\n    var margins = marginString.split(/\\s+/).map(function (margin) {\n      var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n\n      if (!parts) {\n        throw new Error('rootMargin must be specified in pixels or percent');\n      }\n\n      return {\n        value: parseFloat(parts[1]),\n        unit: parts[2]\n      };\n    }); // Handles shorthand.\n\n    margins[1] = margins[1] || margins[0];\n    margins[2] = margins[2] || margins[0];\n    margins[3] = margins[3] || margins[1];\n    return margins;\n  };\n  /**\n   * Starts polling for intersection changes if the polling is not already\n   * happening, and if the page's visibility state is visible.\n   * @param {!Document} doc\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._monitorIntersections = function (doc) {\n    var win = doc.defaultView;\n\n    if (!win) {\n      // Already destroyed.\n      return;\n    }\n\n    if (this._monitoringDocuments.indexOf(doc) != -1) {\n      // Already monitoring.\n      return;\n    } // Private state for monitoring.\n\n\n    var callback = this._checkForIntersections;\n    var monitoringInterval = null;\n    var domObserver = null; // If a poll interval is set, use polling instead of listening to\n    // resize and scroll events or DOM mutations.\n\n    if (this.POLL_INTERVAL) {\n      monitoringInterval = win.setInterval(callback, this.POLL_INTERVAL);\n    } else {\n      addEvent(win, 'resize', callback, true);\n      addEvent(doc, 'scroll', callback, true);\n\n      if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in win) {\n        domObserver = new win.MutationObserver(callback);\n        domObserver.observe(doc, {\n          attributes: true,\n          childList: true,\n          characterData: true,\n          subtree: true\n        });\n      }\n    }\n\n    this._monitoringDocuments.push(doc);\n\n    this._monitoringUnsubscribes.push(function () {\n      // Get the window object again. When a friendly iframe is destroyed, it\n      // will be null.\n      var win = doc.defaultView;\n\n      if (win) {\n        if (monitoringInterval) {\n          win.clearInterval(monitoringInterval);\n        }\n\n        removeEvent(win, 'resize', callback, true);\n      }\n\n      removeEvent(doc, 'scroll', callback, true);\n\n      if (domObserver) {\n        domObserver.disconnect();\n      }\n    }); // Also monitor the parent.\n\n\n    if (doc != (this.root && this.root.ownerDocument || document)) {\n      var frame = getFrameElement(doc);\n\n      if (frame) {\n        this._monitorIntersections(frame.ownerDocument);\n      }\n    }\n  };\n  /**\n   * Stops polling for intersection changes.\n   * @param {!Document} doc\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._unmonitorIntersections = function (doc) {\n    var index = this._monitoringDocuments.indexOf(doc);\n\n    if (index == -1) {\n      return;\n    }\n\n    var rootDoc = this.root && this.root.ownerDocument || document; // Check if any dependent targets are still remaining.\n\n    var hasDependentTargets = this._observationTargets.some(function (item) {\n      var itemDoc = item.element.ownerDocument; // Target is in this context.\n\n      if (itemDoc == doc) {\n        return true;\n      } // Target is nested in this context.\n\n\n      while (itemDoc && itemDoc != rootDoc) {\n        var frame = getFrameElement(itemDoc);\n        itemDoc = frame && frame.ownerDocument;\n\n        if (itemDoc == doc) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n\n    if (hasDependentTargets) {\n      return;\n    } // Unsubscribe.\n\n\n    var unsubscribe = this._monitoringUnsubscribes[index];\n\n    this._monitoringDocuments.splice(index, 1);\n\n    this._monitoringUnsubscribes.splice(index, 1);\n\n    unsubscribe(); // Also unmonitor the parent.\n\n    if (doc != rootDoc) {\n      var frame = getFrameElement(doc);\n\n      if (frame) {\n        this._unmonitorIntersections(frame.ownerDocument);\n      }\n    }\n  };\n  /**\n   * Stops polling for intersection changes.\n   * @param {!Document} doc\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._unmonitorAllIntersections = function () {\n    var unsubscribes = this._monitoringUnsubscribes.slice(0);\n\n    this._monitoringDocuments.length = 0;\n    this._monitoringUnsubscribes.length = 0;\n\n    for (var i = 0; i < unsubscribes.length; i++) {\n      unsubscribes[i]();\n    }\n  };\n  /**\n   * Scans each observation target for intersection changes and adds them\n   * to the internal entries queue. If new entries are found, it\n   * schedules the callback to be invoked.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._checkForIntersections = function () {\n    var rootIsInDom = this._rootIsInDom();\n\n    var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n    this._observationTargets.forEach(function (item) {\n      var target = item.element;\n      var targetRect = getBoundingClientRect(target);\n\n      var rootContainsTarget = this._rootContainsTarget(target);\n\n      var oldEntry = item.entry;\n\n      var intersectionRect = rootIsInDom && rootContainsTarget && this._computeTargetAndRootIntersection(target, targetRect, rootRect);\n\n      var newEntry = item.entry = new IntersectionObserverEntry({\n        time: now(),\n        target: target,\n        boundingClientRect: targetRect,\n        rootBounds: rootRect,\n        intersectionRect: intersectionRect\n      });\n\n      if (!oldEntry) {\n        this._queuedEntries.push(newEntry);\n      } else if (rootIsInDom && rootContainsTarget) {\n        // If the new entry intersection ratio has crossed any of the\n        // thresholds, add a new entry.\n        if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n          this._queuedEntries.push(newEntry);\n        }\n      } else {\n        // If the root is not in the DOM or target is not contained within\n        // root but the previous entry for this target had an intersection,\n        // add a new record indicating removal.\n        if (oldEntry && oldEntry.isIntersecting) {\n          this._queuedEntries.push(newEntry);\n        }\n      }\n    }, this);\n\n    if (this._queuedEntries.length) {\n      this._callback(this.takeRecords(), this);\n    }\n  };\n  /**\n   * Accepts a target and root rect computes the intersection between then\n   * following the algorithm in the spec.\n   * TODO(philipwalton): at this time clip-path is not considered.\n   * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n   * @param {Element} target The target DOM element\n   * @param {Object} targetRect The bounding rect of the target.\n   * @param {Object} rootRect The bounding rect of the root after being\n   *     expanded by the rootMargin value.\n   * @return {?Object} The final intersection rect object or undefined if no\n   *     intersection is found.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._computeTargetAndRootIntersection = function (target, targetRect, rootRect) {\n    // If the element isn't displayed, an intersection can't happen.\n    if (window.getComputedStyle(target).display == 'none') return;\n    var intersectionRect = targetRect;\n    var parent = getParentNode(target);\n    var atRoot = false;\n\n    while (!atRoot && parent) {\n      var parentRect = null;\n      var parentComputedStyle = parent.nodeType == 1 ? window.getComputedStyle(parent) : {}; // If the parent isn't displayed, an intersection can't happen.\n\n      if (parentComputedStyle.display == 'none') return null;\n\n      if (parent == this.root || parent.nodeType ==\n      /* DOCUMENT */\n      9) {\n        atRoot = true;\n\n        if (parent == this.root || parent == document) {\n          parentRect = rootRect;\n        } else {\n          // Check if there's a frame that can be navigated to.\n          var frame = getParentNode(parent);\n          var frameRect = frame && getBoundingClientRect(frame);\n\n          var frameIntersect = frame && this._computeTargetAndRootIntersection(frame, frameRect, rootRect);\n\n          if (frameRect && frameIntersect) {\n            parent = frame;\n            parentRect = convertFromParentRect(frameRect, frameIntersect);\n          } else {\n            parent = null;\n            intersectionRect = null;\n          }\n        }\n      } else {\n        // If the element has a non-visible overflow, and it's not the <body>\n        // or <html> element, update the intersection rect.\n        // Note: <body> and <html> cannot be clipped to a rect that's not also\n        // the document rect, so no need to compute a new intersection.\n        var doc = parent.ownerDocument;\n\n        if (parent != doc.body && parent != doc.documentElement && parentComputedStyle.overflow != 'visible') {\n          parentRect = getBoundingClientRect(parent);\n        }\n      } // If either of the above conditionals set a new parentRect,\n      // calculate new intersection data.\n\n\n      if (parentRect) {\n        intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n      }\n\n      if (!intersectionRect) break;\n      parent = parent && getParentNode(parent);\n    }\n\n    return intersectionRect;\n  };\n  /**\n   * Returns the root rect after being expanded by the rootMargin value.\n   * @return {Object} The expanded root rect.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._getRootRect = function () {\n    var rootRect;\n\n    if (this.root) {\n      rootRect = getBoundingClientRect(this.root);\n    } else {\n      // Use <html>/<body> instead of window since scroll bars affect size.\n      var html = document.documentElement;\n      var body = document.body;\n      rootRect = {\n        top: 0,\n        left: 0,\n        right: html.clientWidth || body.clientWidth,\n        width: html.clientWidth || body.clientWidth,\n        bottom: html.clientHeight || body.clientHeight,\n        height: html.clientHeight || body.clientHeight\n      };\n    }\n\n    return this._expandRectByRootMargin(rootRect);\n  };\n  /**\n   * Accepts a rect and expands it by the rootMargin value.\n   * @param {Object} rect The rect object to expand.\n   * @return {Object} The expanded rect.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._expandRectByRootMargin = function (rect) {\n    var margins = this._rootMarginValues.map(function (margin, i) {\n      return margin.unit == 'px' ? margin.value : margin.value * (i % 2 ? rect.width : rect.height) / 100;\n    });\n\n    var newRect = {\n      top: rect.top - margins[0],\n      right: rect.right + margins[1],\n      bottom: rect.bottom + margins[2],\n      left: rect.left - margins[3]\n    };\n    newRect.width = newRect.right - newRect.left;\n    newRect.height = newRect.bottom - newRect.top;\n    return newRect;\n  };\n  /**\n   * Accepts an old and new entry and returns true if at least one of the\n   * threshold values has been crossed.\n   * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n   *    particular target element or null if no previous entry exists.\n   * @param {IntersectionObserverEntry} newEntry The current entry for a\n   *    particular target element.\n   * @return {boolean} Returns true if a any threshold has been crossed.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._hasCrossedThreshold = function (oldEntry, newEntry) {\n    // To make comparing easier, an entry that has a ratio of 0\n    // but does not actually intersect is given a value of -1\n    var oldRatio = oldEntry && oldEntry.isIntersecting ? oldEntry.intersectionRatio || 0 : -1;\n    var newRatio = newEntry.isIntersecting ? newEntry.intersectionRatio || 0 : -1; // Ignore unchanged ratios\n\n    if (oldRatio === newRatio) return;\n\n    for (var i = 0; i < this.thresholds.length; i++) {\n      var threshold = this.thresholds[i]; // Return true if an entry matches a threshold or if the new ratio\n      // and the old ratio are on the opposite sides of a threshold.\n\n      if (threshold == oldRatio || threshold == newRatio || threshold < oldRatio !== threshold < newRatio) {\n        return true;\n      }\n    }\n  };\n  /**\n   * Returns whether or not the root element is an element and is in the DOM.\n   * @return {boolean} True if the root element is an element and is in the DOM.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._rootIsInDom = function () {\n    return !this.root || containsDeep(document, this.root);\n  };\n  /**\n   * Returns whether or not the target element is a child of root.\n   * @param {Element} target The target element to check.\n   * @return {boolean} True if the target element is a child of root.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._rootContainsTarget = function (target) {\n    return containsDeep(this.root || document, target) && (!this.root || this.root.ownerDocument == target.ownerDocument);\n  };\n  /**\n   * Adds the instance to the global IntersectionObserver registry if it isn't\n   * already present.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._registerInstance = function () {\n    if (registry.indexOf(this) < 0) {\n      registry.push(this);\n    }\n  };\n  /**\n   * Removes the instance from the global IntersectionObserver registry.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._unregisterInstance = function () {\n    var index = registry.indexOf(this);\n    if (index != -1) registry.splice(index, 1);\n  };\n  /**\n   * Returns the result of the performance.now() method or null in browsers\n   * that don't support the API.\n   * @return {number} The elapsed time since the page was requested.\n   */\n\n\n  function now() {\n    return window.performance && performance.now && performance.now();\n  }\n  /**\n   * Throttles a function and delays its execution, so it's only called at most\n   * once within a given time period.\n   * @param {Function} fn The function to throttle.\n   * @param {number} timeout The amount of time that must pass before the\n   *     function can be called again.\n   * @return {Function} The throttled function.\n   */\n\n\n  function throttle(fn, timeout) {\n    var timer = null;\n    return function () {\n      if (!timer) {\n        timer = setTimeout(function () {\n          fn();\n          timer = null;\n        }, timeout);\n      }\n    };\n  }\n  /**\n   * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n   * @param {Node} node The DOM node to add the event handler to.\n   * @param {string} event The event name.\n   * @param {Function} fn The event handler to add.\n   * @param {boolean} opt_useCapture Optionally adds the even to the capture\n   *     phase. Note: this only works in modern browsers.\n   */\n\n\n  function addEvent(node, event, fn, opt_useCapture) {\n    if (typeof node.addEventListener == 'function') {\n      node.addEventListener(event, fn, opt_useCapture || false);\n    } else if (typeof node.attachEvent == 'function') {\n      node.attachEvent('on' + event, fn);\n    }\n  }\n  /**\n   * Removes a previously added event handler from a DOM node.\n   * @param {Node} node The DOM node to remove the event handler from.\n   * @param {string} event The event name.\n   * @param {Function} fn The event handler to remove.\n   * @param {boolean} opt_useCapture If the event handler was added with this\n   *     flag set to true, it should be set to true here in order to remove it.\n   */\n\n\n  function removeEvent(node, event, fn, opt_useCapture) {\n    if (typeof node.removeEventListener == 'function') {\n      node.removeEventListener(event, fn, opt_useCapture || false);\n    } else if (typeof node.detatchEvent == 'function') {\n      node.detatchEvent('on' + event, fn);\n    }\n  }\n  /**\n   * Returns the intersection between two rect objects.\n   * @param {Object} rect1 The first rect.\n   * @param {Object} rect2 The second rect.\n   * @return {?Object} The intersection rect or undefined if no intersection\n   *     is found.\n   */\n\n\n  function computeRectIntersection(rect1, rect2) {\n    var top = Math.max(rect1.top, rect2.top);\n    var bottom = Math.min(rect1.bottom, rect2.bottom);\n    var left = Math.max(rect1.left, rect2.left);\n    var right = Math.min(rect1.right, rect2.right);\n    var width = right - left;\n    var height = bottom - top;\n    return width >= 0 && height >= 0 && {\n      top: top,\n      bottom: bottom,\n      left: left,\n      right: right,\n      width: width,\n      height: height\n    } || null;\n  }\n  /**\n   * Shims the native getBoundingClientRect for compatibility with older IE.\n   * @param {Element} el The element whose bounding rect to get.\n   * @return {Object} The (possibly shimmed) rect of the element.\n   */\n\n\n  function getBoundingClientRect(el) {\n    var rect;\n\n    try {\n      rect = el.getBoundingClientRect();\n    } catch (err) {// Ignore Windows 7 IE11 \"Unspecified error\"\n      // https://github.com/w3c/IntersectionObserver/pull/205\n    }\n\n    if (!rect) return getEmptyRect(); // Older IE\n\n    if (!(rect.width && rect.height)) {\n      rect = {\n        top: rect.top,\n        right: rect.right,\n        bottom: rect.bottom,\n        left: rect.left,\n        width: rect.right - rect.left,\n        height: rect.bottom - rect.top\n      };\n    }\n\n    return rect;\n  }\n  /**\n   * Returns an empty rect object. An empty rect is returned when an element\n   * is not in the DOM.\n   * @return {Object} The empty rect.\n   */\n\n\n  function getEmptyRect() {\n    return {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  /**\n   * Inverts the intersection and bounding rect from the parent (frame) BCR to\n   * the local BCR space.\n   * @param {Object} parentBoundingRect The parent's bound client rect.\n   * @param {Object} parentIntersectionRect The parent's own intersection rect.\n   * @return {Object} The local root bounding rect for the parent's children.\n   */\n\n\n  function convertFromParentRect(parentBoundingRect, parentIntersectionRect) {\n    var top = parentIntersectionRect.top - parentBoundingRect.top;\n    var left = parentIntersectionRect.left - parentBoundingRect.left;\n    return {\n      top: top,\n      left: left,\n      height: parentIntersectionRect.height,\n      width: parentIntersectionRect.width,\n      bottom: top + parentIntersectionRect.height,\n      right: left + parentIntersectionRect.width\n    };\n  }\n  /**\n   * Checks to see if a parent element contains a child element (including inside\n   * shadow DOM).\n   * @param {Node} parent The parent element.\n   * @param {Node} child The child element.\n   * @return {boolean} True if the parent node contains the child node.\n   */\n\n\n  function containsDeep(parent, child) {\n    var node = child;\n\n    while (node) {\n      if (node == parent) return true;\n      node = getParentNode(node);\n    }\n\n    return false;\n  }\n  /**\n   * Gets the parent node of an element or its host element if the parent node\n   * is a shadow root.\n   * @param {Node} node The node whose parent to get.\n   * @return {Node|null} The parent node or null if no parent exists.\n   */\n\n\n  function getParentNode(node) {\n    var parent = node.parentNode;\n\n    if (node.nodeType ==\n    /* DOCUMENT */\n    9 && node != document) {\n      // If this node is a document node, look for the embedding frame.\n      return getFrameElement(node);\n    }\n\n    if (parent && parent.nodeType == 11 && parent.host) {\n      // If the parent is a shadow root, return the host element.\n      return parent.host;\n    }\n\n    if (parent && parent.assignedSlot) {\n      // If the parent is distributed in a <slot>, return the parent of a slot.\n      return parent.assignedSlot.parentNode;\n    }\n\n    return parent;\n  }\n  /**\n   * Returns the embedding frame element, if any.\n   * @param {!Document} doc\n   * @return {!Element}\n   */\n\n\n  function getFrameElement(doc) {\n    try {\n      return doc.defaultView && doc.defaultView.frameElement || null;\n    } catch (e) {\n      // Ignore the error.\n      return null;\n    }\n  } // Exposes the constructors globally.\n\n\n  window.IntersectionObserver = IntersectionObserver;\n  window.IntersectionObserverEntry = IntersectionObserverEntry;\n})();","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n"],"sourceRoot":""}